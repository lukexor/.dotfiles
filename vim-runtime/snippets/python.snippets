snippet #! "Python shebang (#!)"
	#!/usr/bin/env python
	# encoding: utf-8
	
	"""
	`Filename()`
	
	SYNOPSIS
		python `Filename()` [options]
	
	DESCRIPTION
		TODO: This describes the functionality of this script/module.
	
	METHODS
		TODO:
	
	AUTHOR
		`g:snips_author` <`g:snips_authoremail`>
	"""
	
	def main():
		"""
		@param: sys.argv()
		@return: TODO
		@throws: TODO
		"""
		
		${1:pass}

	if __name__ == '__main__':
	    main()

snippet license "License documentation (license)"
	LICENSE
		Copyright (c) `system("date +%Y")` `g:snips_author`
		All rights reserved.

		Redistribution and use in source and binary forms, with or without
		modification, are permitted provided that the following conditions are
		met:

		1. Redistributions of source code must retain the above copyright
		notice, this list of conditions and the following disclaimer.  2.
		Redistributions in binary form must reproduce the above copyright
		notice, this list of conditions and the following disclaimer in the
		documentation and/or other materials provided with the distribution.

		THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
		IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
		TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
		PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
		OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
		EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
		PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
		PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
		LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
		NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
		SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

		The views and conclusions contained in the software and documentation
		are those of the authors and should not be interpreted as representing
		official policies, either expressed or implied, of the FreeBSD Project.

snippet imp "Import (imp)"
	import ${1:module}

snippet mdoc "Module docstring (mdoc)"
	"""
	AUTHOR
		`g:snips_author` <`g:snips_authoremail`>
	"""

	if __name__ == '__main__':
	    main()

	def main():
		"""
		@param: sys.argv()
		@return: TODO
		@throws: TODO
		"""

		${1:pass}:

snippet while "while"
	while ${1:condition}:
	    ${2:# code...}

snippet ld "lambda (ld)"
	${1:var} = lambda ${2:vars} : ${3:action}

snippet . "self (.)"
	self.

snippet _ "dunder (_)"
	__${1:init}__${2}

snippet "" "Function notes (2 DOUBLE_QUOTES)"
	"""
	${1:description}

	@param: ${2:param}
	@return: ${3:return}
	@throws: ${4:throws}
	"""
