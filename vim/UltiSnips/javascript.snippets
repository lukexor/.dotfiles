priority -50

snippet cfn "function (const)" b
const ${1:name} = (${2}) => {
  ${VISUAL}$0
};
endsnippet

snippet fn "function (named)" b
function ${1:name}(${2}) => {
  ${VISUAL}$0
}
endsnippet

snippet if "if" b
if (${1}) {
  ${VISUAL}$0
}
endsnippet

snippet ife "if..else" b
if (${1}) {
  ${2:${VISUAL}}
} else {
  ${0}
}
endsnippet

snippet el "else" b
else {
  ${VISUAL}$0
}
endsnippet

snippet eli "else if"
else if (${1}) {
  ${VISUAL}$0
}
endsnippet

snippet switch "switch (value)" b
switch (${1}) {
  case ${2}:
    ${3}
    break;
  default:
    ${4}
}
endsnippet

snippet case "case 'xyz': ... break"
case "${1:case}":
  ${VISUAL}$0
  break;
endsnippet

snippet ter
  ${1:cond} ? ${2} : ${3}
endsnippet

snippet desc "describe" b
describe("${1:descripton}", () => {
  ${VISUAL}$0
});
endsnippet

snippet context "context" b
context("${1:context}", () => {
  ${VISUAL}$0
});
endsnippet

snippet it "it" b
it("${1:description}", () => {
  ${VISUAL}$0
});
endsnippet

snippet bef "before" b
before(() => {
  ${VISUAL}$0
});
endsnippet

snippet befa "beforeAll" b
beforeAll(() => {
  ${VISUAL}$0
});
endsnippet

snippet befe "beforeEach" b
beforeEach(() => {
  ${VISUAL}$0
});
endsnippet

snippet aft "after" b
after(() => {
  ${VISUAL}$0
});
endsnippet

snippet afta "afterAll" b
afterAll(() => {
  ${VISUAL}$0
});
endsnippet

snippet afte "afterEach" b
afterEach(() => {
  ${VISUAL}$0
});
endsnippet

snippet exp "expect" b
expect(${1})${0};
endsnippet

snippet timeout "setTimeout" b
setTimeout(() => {
  ${VISUAL}$0
}, ${1:1000});
endsnippet

snippet interval "setInterval" b
const ${1:interval} = setInterval(() => {
  ${VISUAL}$0
}, ${2:1000});
endsnippet

snippet cl "console.log" b
console.log(${0});
endsnippet

snippet cd "console.debug" b
console.debug(${0});
endsnippet

snippet ce "console.error" b
console.error(${0});
endsnippet

snippet cw "console.warn" b
console.warn(${0});
endsnippet

snippet ci "console.info" b
console.info(${0});
endsnippet

snippet ct "console.trace" b
console.trace(${0});
endsnippet
