--sort=yes
--format=2
--fields=+afimtlKksSnz
--extra=
--excmd=pattern

--langmap=Perl:+.t
--langmap=vim:+(vimrc)

--langdef=Go
--langmap=Go:.go
--regex-Go=/^package[ \t]*([A-Za-z][A-Za-z0-9_]+)/\1/p,package,packages/
--regex-Go=/^[ \t]*func([ \t]+\([^)]+\))?[ \t]+([a-zA-Z0-9_]+)/\2/f,function,functions/
--regex-Go=/^[ \t]*const[ \t]+([a-zA-Z_][a-zA-Z0-9_]+)/\1/c,constant,constants/
--regex-Go=/^[ \t]*var[ \t]+([a-zA-Z_][a-zA-Z0-9_]+)/\1/v,variable,variables/
--regex-Go=/^[ \t]*type[ \t]+([a-zA-Z_][a-zA-Z0-9_]+)/\1/t,type,types/

--Perl-kinds=-l
--langmap=Perl:+.pod
--regex-perl=/^package[ \t]+['"]?([A-Za-z][A-Za-z0-9:_]+)['"]?/\1/p,package,packages/
--regex-perl=/^[ \t]*(use|require)[ \t]+([A-Za-z_][A-Za-z0-9_:]+)/\2/i,include,includes/
--regex-perl=/^[ \t]*has[ \t]+['"]?([A-Za-z_][A-Za-z0-9_]+)['"]?/\1/a,attribute,attributes/
--regex-perl=/^[ \t]*(before|around|after)[ \t]+['"]?([A-Za-z_][A-Za-z0-9_]+)['"]?[ \t]+/\2/x,attribute modifier,attribute modifiers/
--regex-perl=/^[ \t]*ours?[ \t]+[\$@%]([A-Za-z_][A-Za-z0-9_]+)/\1/o,our,ours/
--regex-perl=/^[ \t]*use[ \t]+constant[ \t]+['"]?([A-Za-z_][A-Za-z0-9_]+)['"]?/\1/c,constant,constants/
--regex-perl=/^[ \t]*Readonly::(Scalar|Array|Hash)[ \t]+(my|ours?)[ \t]+[\$@%]([A-Za-z_][A-Za-z0-9_]+)/\3/R,readonly/

--exclude=*.css
--exclude=*.bak
--exclude=*.cache
--exclude=*.class
--exclude=*.dll
--exclude=*.min.js
--exclude=*.pdb
--exclude=*.pyc
--exclude=*.sln
--exclude=*.sql
--exclude=*.swp
--exclude=*.tar.*
--exclude=*/undodir/*
--exclude=target/*
--exclude=docs/*
--exclude=bin/*
--exclude=.git
--exclude=.hg
--exclude=.svn
--exclude=angular*.js
--exclude=bootstrap*.js
--exclude=cscope.*
--exclude=d3*.js
--exclude=feedback*.js
--exclude=feedback.js
--exclude=jquery*.js
--exclude=log
--exclude=plugins/*
--exclude=tags
--exclude=tmp/*
--exclude=underscore*.js
--exclude=vega*.js
--exclude=vim/plugins/*

--langdef=Rust
--langmap=Rust:.rs
--regex-Rust=/^[ \t]*(#\[[^\]]\][ \t]*)*(pub[ \t]+)?(extern[ \t]+)?("[^"]+"[ \t]+)?(unsafe[ \t]+)?fn[ \t]+([a-zA-Z0-9_]+)/\6/f,functions,function definitions/
--regex-Rust=/^[ \t]*(pub[ \t]+)?type[ \t]+([a-zA-Z0-9_]+)/\2/T,types,type definitions/
--regex-Rust=/^[ \t]*(pub[ \t]+)?enum[ \t]+([a-zA-Z0-9_]+)/\2/g,enum,enumeration names/
--regex-Rust=/^[ \t]*(pub[ \t]+)?struct[ \t]+([a-zA-Z0-9_]+)/\2/s,structure names/
--regex-Rust=/^[ \t]*(pub[ \t]+)?mod[ \t]+([a-zA-Z0-9_]+)/\2/m,modules,module names/
--regex-Rust=/^[ \t]*(pub[ \t]+)?(static|const)[ \t]+(mut[ \t]+)?([a-zA-Z0-9_]+)/\4/c,consts,static constants/
--regex-Rust=/^[ \t]*(pub[ \t]+)?(unsafe[ \t]+)?trait[ \t]+([a-zA-Z0-9_]+)/\3/t,traits,traits/
--regex-Rust=/^[ \t]*(pub[ \t]+)?(unsafe[ \t]+)?impl([ \t\n]*<[^>]*>)?[ \t]+(([a-zA-Z0-9_:]+)[ \t]*(<[^>]*>)?[ \t]+(for)[ \t]+)?([a-zA-Z0-9_]+)/\5 \7 \8/i,impls,trait implementations/
--regex-Rust=/^[ \t]*macro_rules![ \t]+([a-zA-Z0-9_]+)/\1/d,macros,macro definitions/
